{"version":3,"sources":["NoteContext.js","Notes/Notes.js","Notes/NotesWithoutLinks.js","Folders/Folders.js","BackButton/BackButton.js","AddFolder/AddFolder.js","AddNotes/AddNotes.js","ErrorBoundary.js","App.js","index.js"],"names":["NoteContext","React","createContext","folders","notes","deleteNotes","addFolders","addNotes","Notes","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","console","log","props","_this$props","goBack","react_default","a","createElement","src_NoteContext","Consumer","context","map","note","className","id","react_router_dom","to","concat","name","modified","onClick","noteId","cb","fetch","method","headers","content-type","then","res","ok","json","error","Error","newNotes","catch","err","deleteMethod","Component","NotesWithoutLinks","length","content","Folder","item","BackButton","AddFolder","_this","call","nameSubmitted","setState","onHandleSubmit","e","preventDefault","state","body","JSON","stringify","status","history","push","_this2","onSubmit","htmlFor","type","onChange","target","AddNotes","updateNoteName","updateNoteContent","updateFolderId","folderId","Date","ErrorBoundary","hasError","children","App","fetchFolders","setFolders","fetchNotes","setNotes","newFolder","toConsumableArray","filter","contextValue","Provider","src_ErrorBoundary","react_router","path","exact","render","Folders_Folders","component","backButton","_ref","src_Notes_Notes","_ref2","match","params","_ref3","Notes_NotesWithoutLinks","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0be7c3f2.chunk.js","sourcesContent":["import React from 'react'\n\nconst NoteContext = React.createContext({\n    folders: [],\n    notes: [],\n    deleteNotes: () => {},\n    addFolders: () => {},\n    addNotes: () => {}\n})\n\nexport default NoteContext\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport NoteContext from '../NoteContext'\nimport propTypes from 'prop-types'\nimport './Notes.css'\n\nfunction deleteMethod(noteId,cb, goBack){\n    fetch(`http://localhost:9090/notes/${noteId}`, {\n        method: 'DELETE',\n        headers: {\n            'content-type':'application/json'\n        }\n    })\n    .then(res => {\n        if(!res.ok){\n            return res.json().then(error => {\n                throw new Error(error)\n            })\n        }\n    })\n    .then(newNotes => {\n        cb(newNotes)\n        goBack();\n    })\n    .catch(err => {\n        console.error(err);\n    })\n}\n\nexport class Notes extends Component {\n    render() {\n        console.log(this.props);\n        const {notes, goBack} = this.props;\n        return (\n            <NoteContext.Consumer>\n                {context => \n                    <div>\n                        <ul>\n                            {notes.map(note => {\n                                return <li className=\"note\" key={note.id}>\n                                            <Link to={`/notes/${note.id}`}> \n                                                <h2>{note.name}</h2>\n                                            </Link>\n                                            <p>{note.modified}</p>\n                                            <button \n                                                onClick={() => {\n                                                    deleteMethod(note.id,context.deleteNotes, goBack)\n                                                }}\n                                            >\n                                                Delete\n                                            </button>\n                                        </li>\n                            })}\n                        </ul>\n                    </div>\n                }\n            </NoteContext.Consumer>\n        )\n    }\n}\n\nNotes.propTypes = {\n    notes: propTypes.arrayOf(propTypes.shape({\n        content: propTypes.string.isRequired,\n        folderId: propTypes.string.isRequired,\n        id: propTypes.string.isRequired,\n        modified: propTypes.string.isRequired,\n        name: propTypes.string.isRequired\n    })),\n    goBack: propTypes.func\n}\n\nexport default Notes\n","import React, { Component } from 'react'\nimport NoteContext from '../NoteContext'\nimport propTypes from 'prop-types'\nimport './Notes.css'\n\nfunction deleteMethod(noteId,cb, goBack){\n    fetch(`http://localhost:9090/notes/${noteId}`, {\n        method: 'DELETE',\n        headers: {\n            'content-type':'application/json'\n        }\n    })\n    .then(res => {\n        if(!res.ok){\n            return res.json().then(error => {\n                throw new Error(error)\n            })\n        }\n    })\n    .then(newNotes => {\n        cb(newNotes)\n        goBack()\n    })\n    .catch(err => {\n        console.error(err);\n    })\n}\n\nexport class NotesWithoutLinks extends Component {\n\n    \n    render() {\n        const {notes, goBack} = this.props;\n        return (\n            <NoteContext.Consumer>\n            {context => \n                <div>\n                    <ul>\n                        {notes.map(note => {\n                            return <li className=\"note\" key={note.id}>\n                                        <h2>{note.name}</h2>\n                                        <p>{note.modified}</p>\n                                        <button \n                                            onClick={() => {\n                                                deleteMethod(note.id,context.deleteNotes, goBack)\n                                            }}>\n                                            Delete\n                                        </button>\n                                    </li>\n                        })}\n                    </ul>\n                    {notes.length === 1 ? <p>{notes[0].content}</p> : ''}\n                </div>\n            }\n             </NoteContext.Consumer>\n        )\n    }\n}\n\nNotesWithoutLinks.propTypes = {\n    notes: propTypes.arrayOf(propTypes.shape({\n        content: propTypes.string.isRequired,\n        folderId: propTypes.string.isRequired,\n        id: propTypes.string.isRequired,\n        modified: propTypes.string.isRequired,\n        name: propTypes.string.isRequired\n    })),\n    goBack: propTypes.func\n}\n\nexport default NotesWithoutLinks\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport propTypes from 'prop-types'\nimport './Folders.css'\n\nexport class Folder extends Component {\n    render() {\n        return (\n            <div>\n                <ul>\n                    {this.props.folders.map((item) => {\n                        return <Link to={`/folders/${item.id}`} key={item.id}>\n                                    <li>\n                                        <div className=\"folders\">\n                                            {item.name}\n                                        </div>\n                                    </li>\n                                </Link>\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}\n\nFolder.propTypes = {\n    folders: propTypes.arrayOf(propTypes.shape({\n        id: propTypes.string.isRequired,\n        name: propTypes.string.isRequired,\n    }))\n}\n\nexport default Folder\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport '../Folders/Folders.css'\n\nexport class BackButton extends Component {\n    render() {\n        return (\n            <div>\n                <ul>\n                    <Link to={`/`}>\n                        <li>\n                            <div className=\"folders\">\n                                Go back\n                            </div>\n                        </li>\n                    </Link>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default BackButton\n","import React, { Component } from 'react'\nimport NoteContext from '../NoteContext'\n\nexport class AddFolder extends Component {\n    constructor(){\n        super()\n        this.state = {\n            name: ''\n        }\n    }\n\n    nameSubmitted = name => {\n        this.setState({name})\n    }\n\n    onHandleSubmit = (e,cb) => {\n        e.preventDefault();\n        console.log(this.state.name);\n        fetch('http://localhost:9090/folders', {\n            method: 'POST',\n            headers:{\n                'content-type':'application/json'\n            },\n            body: JSON.stringify({name: this.state.name})\n        })\n        .then(res => {\n            if(!res.ok){\n                throw new Error(res.status)\n            }\n            return res.json()\n        })\n        .then(folders => {\n            cb(folders)\n            this.props.history.push('/')\n        })\n        .catch(err => {\n            console.error(err);\n        })\n    }\n\n    render() {\n        return (\n            <NoteContext.Consumer>\n            {context => \n                <div>\n                    <h1>Add Folder</h1>\n                    <form onSubmit={e => this.onHandleSubmit(e, context.addFolders)}>\n                        <label htmlFor=\"name\">Name: </label>\n                        <input id=\"name\" type=\"text\" onChange={e => this.nameSubmitted(e.target.value)}></input>\n                        <button type=\"submit\">Submit</button>\n                    </form>   \n                </div> \n            }\n            </NoteContext.Consumer>\n        )\n    }\n}\n\nexport default AddFolder\n","import React, { Component } from 'react'\nimport NoteContext from '../NoteContext'\n\nexport class AddNotes extends Component {\n    constructor(){\n        super()\n        this.state = {\n            name: '',\n            content: '',\n            folderId: ''\n        }\n    }\n\n    updateNoteName = name => {\n        this.setState({name})\n    }\n\n    updateNoteContent = content => {\n        this.setState({content})\n    }\n\n    updateFolderId = folderId => {\n        this.setState({folderId})\n    }    \n\n    onHandleSubmit = (e,cb) => {\n        e.preventDefault();\n        console.log(this.state.name);\n        console.log(this.state.content);\n        console.log(this.state.folderId);\n        fetch('http://localhost:9090/notes', {\n            method: 'POST',\n            headers:{\n                'content-type':'application/json'\n            },\n            body: JSON.stringify({\n                name: this.state.name, \n                content: this.state.content,\n                modified: new Date(),\n                folderId: this.state.folderId\n            })\n        })\n        .then(res => {\n            if(!res.ok){\n                throw new Error(res.status)\n            }\n            return res.json()\n        })\n        .then(notes => {\n            cb(notes)\n            this.props.history.push('/')\n        })\n        .catch(err => {\n            console.error(err);\n        })\n    }\n    render() {\n        return (\n            <NoteContext.Consumer>\n            {context => \n                <div>\n                    <h1>Add Notes</h1>\n                    <form onSubmit={e => this.onHandleSubmit(e, context.addNotes)}>\n                        <label htmlFor=\"name\">Name: </label>\n                        <input id=\"name\" type=\"text\" onChange={e => this.updateNoteName(e.target.value)}></input>\n                        <label htmlFor=\"content\">Content: </label>\n                        <input id=\"content\" type=\"text\" onChange={e => this.updateNoteContent(e.target.value)}></input>\n                        <select onChange={e => this.updateFolderId(e.target.value)}> \n                        {context.folders.map(item => {\n                            return <option key={item.id} value={item.id}>{`${item.name}`}</option>\n                        })}\n                        </select>\n                        <button type=\"submit\">Submit</button>\n                    </form>   \n                </div> \n            }\n            </NoteContext.Consumer>\n        )\n    }\n}\n\nexport default AddNotes\n","import React, { Component } from 'react'\n\nexport class ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          hasError: false\n        };\n      }\n    \n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    render() {\n    if (this.state.hasError) {      \n        return (\n            <h2>Could not display this component</h2>\n        );\n    }\n    return this.props.children;\n    }  \n}\n\nexport default ErrorBoundary\n","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport Notes from './Notes/Notes'\nimport NotesWithoutLinks from './Notes/NotesWithoutLinks'\nimport Folders from './Folders/Folders'\nimport backButton from './BackButton/BackButton'\nimport NoteContext from './NoteContext';\nimport AddFolder from './AddFolder/AddFolder'\nimport AddNotes from './AddNotes/AddNotes'\nimport ErrorBoundary from './ErrorBoundary'\nimport './App.css';\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      folders: [],\n      notes: []\n    }\n  }\n\n  componentDidMount(){\n    console.log(`component`)\n    this.fetchFolders();\n    this.fetchNotes();\n  }\n\n  fetchFolders = () => {\n    fetch('http://localhost:9090/folders', {\n      method: 'GET',\n      headers: {\n        'content-type': 'json/application'\n      }\n    })\n    .then(res => {\n      if(!res.ok){\n        throw new Error(res.status)\n      }\n      return res.json()\n    })\n    .then(folders => {\n      this.setFolders(folders);\n    })\n    .catch(err => {\n      console.error(err);\n    })\n  }\n\n  fetchNotes = () => {\n    fetch('http://localhost:9090/notes', {\n      method: 'GET',\n      headers: {\n        'content-type': 'json/application'\n      }\n    })\n    .then(res => {\n      if(!res.ok){\n        throw new Error(res.status)\n      }\n      return res.json()\n    })\n    .then(notes => {\n      this.setNotes(notes)\n    })\n    .catch(err => {\n      console.error(err);\n    })\n  }\n\n  setNotes = notes => {\n    this.setState({notes})\n  }\n\n  setFolders = folders => {\n    this.setState({folders})\n  }\n\n  addFolders = newFolder => {\n    console.log(newFolder)\n    this.setState({folders: [...this.state.folders, newFolder]})\n    this.fetchFolders();\n  }\n\n  addNotes = newNotes => {\n    this.setState({notes: [...this.state.notes, newNotes]})\n    this.fetchNotes();\n  }\n\n  deleteNotes = noteId => {\n    const newNotes = this.state.notes.filter(note => note.id !== noteId)\n    this.setState({\n      notes: newNotes\n  })\n\n    this.fetchNotes();\n  }\n\n  render() {\n    const contextValue = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNotes: this.deleteNotes,\n      addNotes: this.addNotes,\n      addFolders: this.addFolders\n    }\n    \n    console.log(`render`)\n\n    return (\n      <div className=\"App\">\n        <header>\n            <Link to=\"/\"><h1>Noteful</h1></Link>\n            <div>\n              <Link to=\"/addNotes\">\n                <p>Add Note</p>\n              </Link>\n              <Link to='/addFolder'>\n                <p>Add Folder</p>\n              </Link>\n          </div>\n        </header>\n        <NoteContext.Provider value={contextValue}>\n          <main className=\"main\">\n            <nav className=\"left\">\n              <ErrorBoundary>\n                <Route \n                  path=\"/\" exact\n                  render={() => <Folders folders={this.state.folders}/>}\n                />\n              </ErrorBoundary>\n                <Route \n                  path=\"/folders/:folderId\" \n                  render={() => <Folders folders={this.state.folders}/>}\n                />\n              <ErrorBoundary>\n                <Route \n                  path=\"/notes/:notesId\"\n                  component={backButton}\n                />\n              </ErrorBoundary>\n              <ErrorBoundary>\n                <Route \n                  path=\"/addFolder\"\n                  component={backButton}\n                />\n              </ErrorBoundary>\n              <ErrorBoundary>\n                <Route \n                  path=\"/addNotes\"\n                  component={backButton}\n                />\n              </ErrorBoundary>\n            </nav>\n            <section className=\"right\">\n              <ErrorBoundary>\n                <Route \n                  path=\"/\" exact\n                  render={({history}) => {\n                  return <Notes \n                    notes={this.state.notes}\n                    goBack={() => history.push('/')}\n                    />\n                  }}\n                />\n              </ErrorBoundary>\n              <ErrorBoundary>\n                <Route \n                  path=\"/folders/:folderId\"\n                  render={({match, history}) => {\n                  return <Notes \n                    notes={this.state.notes.filter((item) => item.folderId === match.params.folderId)}\n                    goBack={() => history.push('/')} \n                  />}}\n                />\n              </ErrorBoundary>\n              <ErrorBoundary>\n                <Route\n                  path=\"/notes/:noteId\" \n                  render={({match, history}) => {\n                  return <NotesWithoutLinks \n                    notes={this.state.notes.filter((item => item.id === match.params.noteId))}\n                    goBack={() => history.push('/')}\n                  />\n                  }}\n                />\n              </ErrorBoundary>\n              <ErrorBoundary>\n                <Route \n                  path=\"/addFolder\"\n                  component={AddFolder}\n                />\n              </ErrorBoundary>\n              <ErrorBoundary>\n                  <Route \n                  path=\"/addNotes\"\n                  component={AddNotes}\n                />\n              </ErrorBoundary>\n            </section>\n          </main>\n        </NoteContext.Provider>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n"],"sourceRoot":""}